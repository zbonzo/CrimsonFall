{
  "root": true,
  "env": {
    "browser": true,
    "es2022": true,
    "node": true,
    "jest": true
  },
  "extends": [
    "eslint:recommended",
    "@typescript-eslint/recommended",
    "plugin:react/recommended",
    "plugin:react-hooks/recommended",
    "plugin:jsx-a11y/recommended",
    "prettier"
  ],
  "parser": "@typescript-eslint/parser",
  "parserOptions": {
    "ecmaVersion": "latest",
    "sourceType": "module",
    "ecmaFeatures": {
      "jsx": true
    }
  },
  "plugins": [
    "@typescript-eslint",
    "react",
    "react-hooks",
    "jsx-a11y",
    "import",
    "simple-import-sort",
    "unused-imports"
  ],
  "rules": {
    "@typescript-eslint/naming-convention": [
      "error",
      {
        "selector": "variableLike",
        "format": ["camelCase"],
        "leadingUnderscore": "allow",
        "trailingUnderscore": "forbid"
      },
      {
        "selector": "function",
        "format": ["camelCase"],
        "custom": {
          "regex": "^(get|set|is|has|can|add|remove|create|destroy|delete|find|search|calculate|compute|handle|process|on|ensure|validate|load|save|fetch|upload|init|reset|clear|update)[A-Z]",
          "match": true
        }
      },
      {
        "selector": "public",
        "format": ["camelCase"],
        "custom": {
          "regex": "^(get|set|is|has|can|add|remove|create|destroy|delete|find|search|calculate|compute|handle|process|on|ensure|validate|load|save|fetch|upload|init|reset|clear|update)[A-Z]",
          "match": true
        }
      },
      {
        "selector": "private",
        "format": ["camelCase"],
        "custom": {
          "regex": "^(get|set|is|has|can|add|remove|create|destroy|delete|find|search|calculate|compute|handle|process|on|ensure|validate|load|save|fetch|upload|init|reset|clear|update)[A-Z]",
          "match": true
        }
      },
      {
        "selector": "typeLike",
        "format": ["PascalCase"]
      },
      {
        "selector": "interface",
        "format": ["PascalCase"],
        "custom": {
          "regex": "^I[A-Z]",
          "match": false
        }
      },
      {
        "selector": "enum",
        "format": ["PascalCase"]
      },
      {
        "selector": "enumMember",
        "format": ["PascalCase"]
      },
      {
        "selector": "typeParameter",
        "format": ["PascalCase"],
        "prefix": ["T"]
      },
      {
        "selector": "variable",
        "modifiers": ["const", "global"],
        "format": ["UPPER_SNAKE_CASE", "camelCase"]
      }
    ],
    "simple-import-sort/imports": [
      "error",
      {
        "groups": [
          ["^node:"],
          ["^@?\\w"],
          ["^@/"],
          ["^\\.\\.(?!/?$)", "^\\.\\./?$"],
          ["^\\./(?=.*/)(?!/?$)", "^\\.(?!/?$)", "^\\./?$"],
          ["^.+\\.s?css$"]
        ]
      }
    ],
    "simple-import-sort/exports": "error",
    "import/first": "error",
    "import/newline-after-import": "error",
    "import/no-duplicates": "error",
    "import/no-default-export": "error",
    "unused-imports/no-unused-imports": "error",
    "sort-keys": [
      "error",
      "asc",
      {
        "caseSensitive": true,
        "natural": true,
        "allowLineSeparatedGroups": true
      }
    ],
    "@typescript-eslint/explicit-function-return-type": "error",
    "@typescript-eslint/no-explicit-any": "error",
    "@typescript-eslint/no-unused-vars": "error",
    "@typescript-eslint/prefer-readonly": "error",
    "prefer-const": "error",
    "no-var": "error",
    "quotes": ["error", "single", { "avoidEscape": true }],
    "react/prop-types": "off",
    "react/react-in-jsx-scope": "off",
    "react-hooks/rules-of-hooks": "error",
    "react-hooks/exhaustive-deps": "warn",
    "jsx-a11y/anchor-is-valid": "error",
    "jsx-a11y/alt-text": "error",
    "jsx-a11y/aria-props": "error",
    "jsx-a11y/aria-proptypes": "error",
    "jsx-a11y/aria-unsupported-elements": "error",
    "jsx-a11y/role-has-required-aria-props": "error",
    "jsx-a11y/role-supports-aria-props": "error"
  },
  "overrides": [
    {
      "files": ["**/*.test.js", "**/*.test.jsx", "**/*.test.ts", "**/*.test.tsx"],
      "rules": {
        "@typescript-eslint/no-explicit-any": "off",
        "sort-keys": "off",
        "@typescript-eslint/no-unsafe-assignment": "off",
        "@typescript-eslint/no-unsafe-member-access": "off"
      }
    },
    {
      "files": ["**/simulations/**/*.js", "**/simulations/**/*.ts"],
      "rules": {
        "@typescript-eslint/naming-convention": [
          "error",
          {
            "selector": "default",
            "format": ["kebab-case", "camelCase"]
          }
        ]
      }
    },
    {
      "files": ["*.config.js", "*.config.ts", ".eslintrc.js"],
      "rules": {
        "import/no-default-export": "off"
      }
    }
  ],
  "settings": {
    "react": {
      "version": "detect"
    }
  }
}
